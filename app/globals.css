@tailwind base;
@tailwind components;
@tailwind utilities;# install-tailwind.ps1

$ErrorActionPreference = "Stop"

Write-Host "Setting up Tailwind CSS..." -ForegroundColor Cyan

# Install required packages
Write-Host "Installing dependencies..." -ForegroundColor Yellow
pnpm add -D tailwindcss postcss autoprefixer

# Create Tailwind config
Write-Host "Creating Tailwind config..." -ForegroundColor Yellow
npx tailwindcss init -p

# Create/Update tailwind.config.js
$tailwindConfig = @'
/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./app/**/*.{js,ts,jsx,tsx,mdx}",
    "./pages/**/*.{js,ts,jsx,tsx,mdx}",
    "./components/**/*.{js,ts,jsx,tsx,mdx}",
  ],
  theme: {
    extend: {},
  },
  plugins: [],
}
'@
Set-Content -Path "tailwind.config.js" -Value $tailwindConfig

# Create/Update postcss.config.js
$postcssConfig = @'
module.exports = {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}
'@
Set-Content -Path "postcss.config.js" -Value $postcssConfig

# Create/Update .vscode/settings.json for CSS validation
$vscodePath = ".\.vscode"
if (-not (Test-Path $vscodePath)) {
    New-Item -ItemType Directory -Force -Path $vscodePath
}

$vscodeSettings = @'
{
    "css.validate": false,
    "tailwindCSS.includeLanguages": {
        "javascript": "javascript",
        "typescript": "typescript"
    },
    "editor.quickSuggestions": {
        "strings": true
    }
}
'@
Set-Content -Path ".\.vscode\settings.json" -Value $vscodeSettings

Write-Host "âœ“ Tailwind CSS setup complete" -ForegroundColor Green
Write-Host "Please restart VS Code for the settings to take effect" -ForegroundColor Yellow